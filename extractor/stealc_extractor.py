import re
import sys
import base64
from Crypto.Cipher import ARC4

# usage: python3 stealc_extractor.py <malware_full_path>
file_path = sys.argv[1]

def get_rc4key(file_path):
    rc4_pattern = re.compile(b'[0-9]{20,25}')
    
    with open(file_path, 'rb') as f:
        for line in f:
            for match in re.finditer(rc4_pattern, line):
                rc4_key = match.group()
    
    return rc4_key

def get_base64_strings(file_path):
    b64_pattern = re.compile(b'[A-Za-z0-9+/=]{5,}')
    
    b64 = []
    with open(file_path, 'rb') as f:
        for line in f:
            for match in re.finditer(b64_pattern, line):
                try:
                    b64.append(base64.b64decode(match.group().decode('utf8')))
                except:
                    pass
    return b64


def decode_base64(encoded_text):
    return base64.b64decode(encoded_text)

def decode_rc4(encoded_text, rc4key):
    rc4_key = rc4key
    cipher = ARC4.new(rc4_key)
    rc4_decrypt = cipher.decrypt(encoded_text)
    return rc4_decrypt

def start(file_path):
    rc4_encoded_text = get_base64_strings(file_path)
    rc4key = get_rc4key(file_path)

    for i in rc4_encoded_text:
        rc4_decoded_text = decode_rc4(i, rc4key)
        try:
            if "http:" in rc4_decoded_text.decode('utf8'): 
                print(f"RC4 KEY: {rc4key.decode('utf8')}")
                print(f"C2: {rc4_decoded_text.decode('utf8')}")
        except:
            pass

start(file_path)
